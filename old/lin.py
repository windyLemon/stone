# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'lin.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import cv2
from preprocess import preprocess
from segmentation import binary_image, segmentation, auto_canny, calculate, algorithm_watershed
import numpy as np
from matplotlib.figure import Figure
from PyQt5.QtWidgets import QMainWindow, QApplication, QGraphicsPixmapItem, QGraphicsScene
from PyQt5.QtGui import QPixmap, QImage
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
import time
import os
import matplotlib.pyplot as plt


class Ui_Form1(object):
    def setupUi(self, Form):
        Form.setObjectName("粒度检测")
        Form.resize(1194, 1005)
        self.centralwidget = QtWidgets.QWidget(Form)
        self.centralwidget.setObjectName("centralwidget")
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(10, 10, 941, 561))
        self.graphicsView.setObjectName("graphicsView")
        self.graphicsView_2 = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView_2.setGeometry(QtCore.QRect(10, 620, 471, 371))
        self.graphicsView_2.setObjectName("graphicsView_2")
        self.textBrowser_9 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_9.setGeometry(QtCore.QRect(120, 580, 251, 31))
        self.textBrowser_9.setObjectName("textBrowser_9")
        self.graphicsView_3 = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView_3.setGeometry(QtCore.QRect(490, 620, 461, 371))
        self.graphicsView_3.setObjectName("graphicsView_3")
        self.textBrowser_10 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_10.setGeometry(QtCore.QRect(610, 580, 251, 31))
        self.textBrowser_10.setObjectName("textBrowser_10")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(990, 440, 160, 391))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton_4 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton_4.setObjectName("pushButton_4")
        self.verticalLayout.addWidget(self.pushButton_4)
        self.pushButton_5 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton_5.setObjectName("pushButton_5")
        self.verticalLayout.addWidget(self.pushButton_5)
        self.pushButton_3 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout.addWidget(self.pushButton_3)
        self.pushButton_6 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton_6.setObjectName("pushButton_6")
        self.verticalLayout.addWidget(self.pushButton_6)
        self.pushButton_7 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton_7.setObjectName("pushButton_7")
        self.verticalLayout.addWidget(self.pushButton_7)
        self.pushButton_8 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton_8.setObjectName("pushButton_8")
        self.verticalLayout.addWidget(self.pushButton_8)
        self.pushButton_9 = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.pushButton_9.setObjectName("pushButton_9")
        self.verticalLayout.addWidget(self.pushButton_9)
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(980, 320, 175, 61))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(960, 110, 211, 161))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.textBrowser_6 = QtWidgets.QTextBrowser(self.gridLayoutWidget)
        self.textBrowser_6.setObjectName("textBrowser_6")
        self.gridLayout.addWidget(self.textBrowser_6, 1, 1, 1, 1)
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.gridLayoutWidget)
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.gridLayout.addWidget(self.textBrowser_3, 2, 0, 1, 1)
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.gridLayoutWidget)
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.gridLayout.addWidget(self.textBrowser_4, 3, 0, 1, 1)
        self.textBrowser = QtWidgets.QTextBrowser(self.gridLayoutWidget)
        self.textBrowser.setObjectName("textBrowser")
        self.gridLayout.addWidget(self.textBrowser, 0, 0, 1, 1)
        self.textEdit_2 = QtWidgets.QTextEdit(self.gridLayoutWidget)
        self.textEdit_2.setObjectName("textEdit_2")
        self.gridLayout.addWidget(self.textEdit_2, 1, 0, 1, 1)
        self.textBrowser_7 = QtWidgets.QTextEdit(self.gridLayoutWidget)
        self.textBrowser_7.setObjectName("textBrowser_7")
        self.gridLayout.addWidget(self.textBrowser_7, 2, 1, 1, 1)
        self.textBrowser_5 = QtWidgets.QTextBrowser(self.gridLayoutWidget)
        self.textBrowser_5.setObjectName("textBrowser_5")
        self.gridLayout.addWidget(self.textBrowser_5, 0, 1, 1, 1)
        self.textBrowser_8 = QtWidgets.QTextBrowser(self.gridLayoutWidget)
        self.textBrowser_8.setObjectName("textBrowser_8")
        self.gridLayout.addWidget(self.textBrowser_8, 3, 1, 1, 1)
        self.textBrowser_11 = QtWidgets.QTextBrowser(self.centralwidget)
        self.textBrowser_11.setGeometry(QtCore.QRect(1000, 70, 131, 31))
        self.textBrowser_11.setObjectName("textBrowser_11")
        Form.setCentralWidget(self.centralwidget)
        # self.actiongongneng = QtWidgets.QAction(MainWindow)
        # self.actiongongneng.setObjectName("actiongongneng")
        # self.actiongongenng2 = QtWidgets.QAction(MainWindow)
        # self.actiongongenng2.setObjectName("actiongongenng2")
        # self.actionMain_interface = QtWidgets.QAction(MainWindow)
        # self.actionMain_interface.setObjectName("actionMain_interface")
        # self.actionCamera = QtWidgets.QAction(MainWindow)
        # self.actionCamera.setObjectName("actionCamera")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textBrowser_9.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">实时粒度统计</p></body></html>"))
        self.textBrowser_10.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">当前粒度统计</p></body></html>"))
        self.pushButton_4.setText(_translate("MainWindow", "传送带1"))
        self.pushButton_5.setText(_translate("MainWindow", "传送带2"))
        self.pushButton_3.setText(_translate("MainWindow", "传送带3"))
        self.pushButton_6.setText(_translate("MainWindow", "传送带4"))
        self.pushButton_7.setText(_translate("MainWindow", "传送带5"))
        self.pushButton_8.setText(_translate("MainWindow", "传送带6"))
        self.pushButton_9.setText(_translate("MainWindow", "传送带7"))
        self.pushButton.setText(_translate("MainWindow", "相机管理"))
        self.pushButton_2.setText(_translate("MainWindow", "ip设置"))
        self.textBrowser_6.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">222</p></body></html>"))
        self.textBrowser_3.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">三级尺寸</p></body></html>"))
        self.textBrowser_4.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">四级尺寸</p></body></html>"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">一级尺寸</p></body></html>"))
        self.textEdit_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">二级尺寸</p></body></html>"))
        self.textBrowser_7.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">333</p></body></html>"))
        self.textBrowser_5.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">111</p></body></html>"))
        self.textBrowser_8.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">444</p></body></html>"))
        self.textBrowser_11.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'.AppleSystemUIFont\'; font-size:13pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">粒度分布</p></body></html>"))
        # self.actiongongneng.setText(_translate("MainWindow", "gongneng"))
        # self.actiongongenng2.setText(_translate("MainWindow", "gongenng2"))
        # self.actionMain_interface.setText(_translate("MainWindow", "Main interface"))
        # self.actionCamera.setText(_translate("MainWindow", "Camera"))


class Detect(QMainWindow, Ui_Form1):
    switch_camera = QtCore.pyqtSignal()
    switch_ip = QtCore.pyqtSignal()
    def __init__(self):
        super().__init__()
        self.setupUi(self)
        # self.pushButton.clicked.connect(self.click)
        # self.pushButton_2.clicked.connect(self.click2)
        self.rank1 = 4.75
        self.rank2 = 10
        self.rank3 = 26.5

        self.figure1 = MyFigure()
        self.figure2 = MyFigure2()
        self.assist()

        self.work = Worker()
        self.work.sin_out.connect(self.time_click)
        self.work.start()

        self.total = os.listdir('/Users/jhchen/PycharmProjects/stones/Desktop/seg1')
        self.iter = 0

    def assist(self):
        self.pushButton.clicked.connect(self.switch1)
        self.pushButton_2.clicked.connect(self.switch2)

        self.figure_scene = QGraphicsScene()
        self.figure_scene.addWidget(self.figure1)
        self.graphicsView_2.setScene(self.figure_scene)
        self.scene = QGraphicsScene()

        self.figure_scene2 = QGraphicsScene()
        self.figure_scene2.addWidget(self.figure2)
        self.graphicsView_3.setScene(self.figure_scene2)

    def visual_image(self):
        img = self.read_image()
        img = cv2.resize(img, (144 * 6, 108 * 5))
        frame = QImage(img, 144 * 6, 108 * 5, QImage.Format_RGB888)
        pix = QPixmap.fromImage(frame)
        item = QGraphicsPixmapItem(pix)  # 创建像素图元
        # self.scene = QGraphicsScene()  # 创建场景
        self.scene.addItem(item)
        self.graphicsView.setScene(self.scene)
        self.graphicsView.show()

    def time_click(self):
        img = self.read_image()
        self.segmentation(img)
        self.visual_image()
        self.draw1()
        self.draw2()

    def draw1(self):
        self.figure1.clear()
        self.figure1.add(self.r1, self.r2, self.r3, self.r4)
        self.figure1.draw()
        self.graphicsView_2.show()

    def draw2(self):
        y = [0 for _ in range(10)]
        for i in range(9):
            y[i] = ((self.res > self.figure2.x[i]) & (self.res < self.figure2.x[i+1])).sum() / len(self.figure2.x) * 100
        y[9] = (self.res > self.figure2.x[9]).sum() / len(self.figure2.x) * 100
        self.figure2.clear()
        self.figure2.add(y)
        self.figure2.draw()
        self.graphicsView_3.show()

    def segmentation(self, image):
        v, final = algorithm_watershed(image)
        self.res = np.array(calculate(v, final))
        self.r1 = (self.res > self.rank3).sum() / len(self.res) * 100
        self.r2 = (self.res < self.rank1).sum() / len(self.res) * 100
        self.r3 = ((self.rank2 > self.res) & (self.res > self.rank1)).sum() / len(self.res) * 100
        self.r4 = ((self.rank3 > self.res) & (self.res > self.rank2)).sum() / len(self.res) * 100

        self.textBrowser_5.setText('{:.2f}%'.format(float(self.r1)))
        self.textBrowser_6.setText('{:.2f}%'.format(float(self.r2)))
        self.textBrowser_7.setText('{:.2f}%'.format(float(self.r3)))
        self.textBrowser_8.setText('{:.2f}%'.format(float(self.r4)))
        return image

    def read_image(self):
        path = self.total[self.iter]
        image = cv2.imread(os.path.join('/Users/jhchen/PycharmProjects/stones/Desktop/seg1', path))
        self.iter += 1
        if self.iter >= len(self.total):
            self.iter = 0
        return image

    def switch1(self):
        self.switch_camera.emit()

    def switch2(self):
        self.switch_ip.emit()


class MyFigure(FigureCanvas):
    def __init__(self, parent=None, width=4.3, height=3.3):
        fig = Figure(figsize=(width, height))

        FigureCanvas.__init__(self, fig)
        self.setParent(parent)

        self.axes = fig.add_subplot(111)
        fig.tight_layout()
        self.x = [1, 2, 3, 4, 5, 6, 7, 8, 9][::-1]
        self.y1 = [0, 0, 0, 0, 0, 0, 0, 0, 0]
        self.y2 = [0, 0, 0, 0, 0, 0, 0, 0, 0]
        self.y3 = [0, 0, 0, 0, 0, 0, 0, 0, 0]
        self.y4 = [0, 0, 0, 0, 0, 0, 0, 0, 0]

    def add(self, item1, item2, item3, item4):
        self.y1.pop(0)
        self.y2.pop(0)
        self.y3.pop(0)
        self.y4.pop(0)

        self.y1.append(item1)
        self.y2.append(item2)
        self.y3.append(item3)
        self.y4.append(item4)
        l1 = self.axes.plot(self.x, self.y1, label='1')
        l2 = self.axes.plot(self.x, self.y2, label='2')
        l3 = self.axes.plot(self.x, self.y3, label='3')
        l4 = self.axes.plot(self.x, self.y4, label='4')

        self.axes.set_xlabel('time')
        self.axes.set_ylabel('Particle size distribution')

        self.axes.margins(0.)
        # self.axes.subplots_adjust(bottom=0.)

        self.axes.grid()
        self.axes.legend()
        self.axes.set_ylim(0, 100)

    def clear(self):
        self.axes.clear()


class MyFigure2(FigureCanvas):
    def __init__(self, parent=None, width=4.3, height=3.3):
        fig = Figure(figsize=(width, height))

        FigureCanvas.__init__(self, fig)
        self.setParent(parent)

        self.axes = fig.add_subplot(111)
        fig.tight_layout()
        self.x = [2.5, 5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25]

    def add(self, y):
        self.axes.plot(self.x, y)
        self.axes.set_xlabel('Particle size')
        self.axes.set_ylabel('Particle size distribution')

        self.axes.margins(0.)
        self.axes.grid()
        self.axes.set_ylim(0, 100)

    def clear(self):
        self.axes.clear()


class Worker(QtCore.QThread):
    sin_out = QtCore.pyqtSignal()

    def __init__(self):
        super(Worker, self).__init__()
        self.w = True

    def run(self) -> None:
        while self.w:
            if time.gmtime().tm_sec % 5 == 0:
                self.sin_out.emit()
                self.sleep(1)

    def __del__(self):
        self.w = False
